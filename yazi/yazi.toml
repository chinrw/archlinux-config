[manager]
ratio = [1, 4, 4]
sort_by = "natural"
linemode = "size"
show_hidden = false

[preview]
tab_size = 2
max_width = 1500
max_height = 2000


[opener]
# append_edit = [
# 	{ run = '${EDITOR:=vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
# 	{ run = 'subl "$@"', desc = "sublime", block = false, for = "unix" },
# ]
edit = [
	{ run = '${EDITOR:=vi} "$@"', desc = "$EDITOR", block = true, for = "unix" },
	{ run = 'code "%*"', orphan = true, desc = "code", for = "windows" },
	{ run = 'code -w "%*"', block = true, desc = "code (block)", for = "windows" },
]
open = [
	{ run = 'xdg-open "$@"', desc = "Open", for = "linux" },
	{ run = 'open "$@"', desc = "Open", for = "macos" },
	{ run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]
reveal = [
	{ run = 'open -R "$1"', desc = "Reveal", for = "macos" },
	{ run = 'explorer /select, "%1"', orphan = true, desc = "Reveal", for = "windows" },
	{ run = '''exiftool "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show EXIF", for = "unix" },
]
image = [
	{ run = '/home/chin39/.local/share/flatpak/exports/bin/com.xnview.XnViewMP "$@"', orphan = true, desc = "Xnviewmp", for = "linux" },
]
extract = [
	{ run = 'unar "$1"', desc = "Extract here", for = "unix" },
	{ run = 'unar "%1"', desc = "Extract here", for = "windows" },
]
play = [
	{ run = 'mpv "$@"', orphan = true, for = "unix" },
	{ run = 'IINA "%1"', orphan = true, for = "macos" },
	{ run = 'mpv "%1"', orphan = true, for = "windows" },
	{ run = '''mediainfo "$1"; echo "Press enter to exit"; read _''', block = true, desc = "Show media info", for = "unix" },
]
view = [
	{ run = 'bat --pager "less -XR" "$@"', desc = "bat", block = true, for = "unix" },
]

[open]
rules = [
	{ name = "*/", use = [
		"view",
		"open",
		"edit",
		"reveal",
	] },

	{ mime = "text/*", use = [
		"edit",
		"reveal",
	] },
	{ mime = "image/*", use = [
		"image",
		"open",
		"reveal",
	] },
	{ mime = "video/*", use = [
		"play",
		"reveal",
	] },
	{ mime = "audio/*", use = [
		"play",
		"reveal",
	] },
	{ mime = "inode/x-empty", use = [
		"edit",
		"reveal",
	] },

	{ mime = "application/json", use = [
		"edit",
		"reveal",
	] },
	{ mime = "*/javascript", use = [
		"edit",
		"reveal",
	] },

	{ mime = "application/zip", use = [
		"extract",
		"reveal",
	] },
	{ mime = "application/gzip", use = [
		"extract",
		"reveal",
	] },
	{ mime = "application/x-tar", use = [
		"extract",
		"reveal",
	] },
	{ mime = "application/x-bzip", use = [
		"extract",
		"reveal",
	] },
	{ mime = "application/x-bzip2", use = [
		"extract",
		"reveal",
	] },
	{ mime = "application/x-7z-compressed", use = [
		"extract",
		"reveal",
	] },
	{ mime = "application/x-rar", use = [
		"extract",
		"reveal",
	] },
	{ mime = "application/xz", use = [
		"extract",
		"reveal",
	] },

	{ mime = "*", use = [
		"open",
		"reveal",
	] },
]

[plugin]
prefetchers = [
	# Mimetype
	{ name = "*", cond = "!mime", run = "mime", prio = "high" },
]
prepend_previewers = [
	# Archive previewer
	{ mime = "application/*zip", run = "ouch" },
	{ mime = "application/x-tar", run = "ouch" },
	{ mime = "application/x-bzip2", run = "ouch" },
	{ mime = "application/x-7z-compressed", run = "ouch" },
	{ mime = "application/x-rar", run = "ouch" },
	{ mime = "application/x-xz", run = "ouch" },
]
append_previewers = [{ name = "*", run = "hexyl" }]
